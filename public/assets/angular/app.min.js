"use strict";var yukonApp=angular.module("yukonApp",["ui.router","ngAnimate","ui.load","ngSanitize","ngCookies","ui.bootstrap","ncy-angular-breadcrumb","ngRetina","angular-growl","NgSwitchery","textAngular"]);yukonApp.run(["$rootScope","$state","$stateParams",function($rootScope,$state,$stateParams){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.$on("$stateChangeSuccess",function(){$("html, body").animate({scrollTop:0},200),FastClick.attach(document.body)}),$rootScope.$on("$stateChangeStart",function(){$(".FixedHeader_Cloned").length&&$(".FixedHeader_Cloned").remove(),$(".daterangepicker").length&&$(".daterangepicker").remove(),$("#autosizejs").length&&$("#autosizejs").remove(),$(".select2-hidden-accessible").length&&$(".select2-hidden-accessible").remove()}),$rootScope.isTouchDevice=!!("ontouchstart"in window),$rootScope.isHighDensity=function(){return window.matchMedia&&(window.matchMedia("only screen and (min-resolution: 124dpi), only screen and (min-resolution: 1.3dppx), only screen and (min-resolution: 48.8dpcm)").matches||window.matchMedia("only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3)").matches)||window.devicePixelRatio&&window.devicePixelRatio>1.3},$rootScope.appVer="v1.6",$rootScope.sideMenuAct=!0,$rootScope.topMenuAct=!$rootScope.sideMenuAct}]),yukonApp.config(function($breadcrumbProvider){$breadcrumbProvider.setOptions({includeAbstract:!0,prefixStateName:"auth.home",templateUrl:"views/partials/breadcrumbs.html"})}).config(function($tooltipProvider){$tooltipProvider.options({appendToBody:!0})}).config(["growlProvider","$httpProvider",function(growlProvider,$httpProvider){growlProvider.globalReversedOrder(!0),growlProvider.globalDisableIcons(!0),growlProvider.globalTimeToLive(5e3),$httpProvider.interceptors.push(growlProvider.serverMessagesInterceptor)}]),yukonApp.filter("unique",["$parse",function($parse){return function(items,filterOn){if(filterOn===!1)return items;if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var newItems=[],get=angular.isString(filterOn)?$parse(filterOn):function(item){return item},extractValueToCompare=function(item){return angular.isObject(item)?get(item):item};angular.forEach(items,function(item){for(var isDuplicate=!1,i=0;i<newItems.length;i++)if(angular.equals(extractValueToCompare(newItems[i]),extractValueToCompare(item))){isDuplicate=!0;break}isDuplicate||newItems.push(item)}),items=newItems}return items}}]);